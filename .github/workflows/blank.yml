
name: CI

on:
  push:
    tags:
      - "dev-*"
      - "staging-*"

jobs:

  set-env-vars:
    runs-on: ubuntu-latest
    name: Setting configs for ${{ github.ref_name }}
    outputs:
      stage: ${{ steps.sets.outputs.STAGE }}
      ssh_host: ${{ steps.sets.outputs.SSH_HOST }}
      ssh_user: ${{ steps.sets.outputs.SSH_USER }}
    steps:
      - name: sets for dev
        if: ${{ startsWith(github.ref_name, 'dev') }}
        run: |
          echo "STAGE=dev" >> $GITHUB_ENV
          echo "SSH_HOST=54.155.13.164" >> $GITHUB_ENV
          echo "SSH_USER=ec2-user" >> $GITHUB_ENV
      - name: sets for staging
        if: ${{ startsWith(github.ref_name, 'staging') }}
        run: |
          echo "STAGE=staging" >> $GITHUB_ENV
          echo "SSH_HOST=52.214.233.30" >> $GITHUB_ENV
          echo "SSH_USER=ubuntu" >> $GITHUB_ENV
      - name: Set config
        id: sets
        run: |
          if [ "${{ env.STAGE }}" == "dev" ]; then
             echo "gpu_runner=gpu-dev" >> "$GITHUB_OUTPUT";
             echo "STAGE=dev" >> "$GITHUB_OUTPUT";
             echo "SSH_HOST=54.155.13.164" >> "$GITHUB_OUTPUT";
             echo "SSH_USER=ec2-user" >> "$GITHUB_OUTPUT";
          elif [ "${{ env.STAGE }}" == "staging" ]; then
             echo "gpu_runner=gpu-prod-1" >> "$GITHUB_OUTPUT";
             echo "STAGE=staging" >> "$GITHUB_OUTPUT";
             echo "SSH_HOST=52.214.233.30" >> "$GITHUB_OUTPUT";
             echo "SSH_USER=ubuntu" >> "$GITHUB_OUTPUT";
          else
             # In case none of the above occurs
             echo "Cant detect environment";
             exit 1;
          fi

  build:
    needs:
      - set-env-vars
    strategy: 
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      DEPLOY_TO_USER: yoel
      STAGE: ${{ needs.set-env-vars.outputs.stage }}
    steps:
      - uses: actions/checkout@v4
      - name: Run a one-line script
        run: |
          echo ${{ env.STAGE }}
          echo ${{ env.DEPLOY_TO_USER }}

